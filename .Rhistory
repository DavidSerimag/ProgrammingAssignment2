getwd()
add2 <- function(x,y) {
x + y
}
library(swirl)
swirl()
TRUE==TRUE
FALSE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints)>7
?which
which(ints)
which(ints>7)
any(ints<0)
all(ints>0)
sys.date()
Sys.Date()
mean(c(3,4,5))
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(2,4,5))
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(median,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Esto","es","una","prueba")
submit()
submit()
mad_libs(place="Barcelona",adjective="crazy",noun="school")
submit()
"I"%p%"love"%p%"R"
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3,%B %d,%Y %H:%M)
strptime(t3,"%B %d,%Y %H:%M")
t4 <- strptime(t3,"%B %d,%Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
unique_vals <- sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flasg$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmasses,summary)
tapply(flags$population,flags$landmass,summary)
bye()
library(datasets)
data(iris)
?iris
iris
head(iris)
sapply(iris,mean)
?round
round(sapply(iris,mean))
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
hp <- taaply(mtcars$hp,mtcars$cyl,mean)
hp <- taply(mtcars$hp,mtcars$cyl,mean)
hp <- tapply(mtcars$hp,mtcars$cyl,mean)
hp
round(hp$8-hp$4)
round(hp[3]-hp[1])
debug(ls)
apply(iris[, 1:4], 2, mean)
round(tapply(iris$Sepal.Length,iris$Species,mean))
sad
submit()
submit("cachematrix.R")
?submit
source()
source("cachematrix.R")
pwd
getpwd()
getpwd
setwd("C:/Users/David/Desktop/Data Science/02 R programming/lexical scoping/ProgrammingAssignment2")
source("cachematrix.R")
